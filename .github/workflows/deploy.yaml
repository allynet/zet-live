name: Build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: blacksmith-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create env file
        env:
          PLAUSIBLE_SITE_URL: ${{ vars.PLAUSIBLE_SITE_URL }}
          PUBLIC_SITE_URL: ${{ vars.PUBLIC_SITE_URL }}
          API_URL: ${{ vars.API_URL }}
        run: |
          echo "PLAUSIBLE_SCRIPT_URL=/pevts/pl-a/js/script.js" > ./frontend/.env.docker
          echo "PLAUSIBLE_API_URL=/pevts/pl-a/api/event" >> ./frontend/.env.docker
          if [ -n "$PLAUSIBLE_SITE_URL" ]; then echo "PLAUSIBLE_SITE_URL=$PLAUSIBLE_SITE_URL" >> ./frontend/.env.docker; fi
          if [ -n "$PUBLIC_SITE_URL" ]; then echo "PUBLIC_SITE_URL=$PUBLIC_SITE_URL" >> ./frontend/.env.docker; fi
          if [ -n "$API_URL" ]; then echo "API_URL=$API_URL" >> ./frontend/.env.docker; fi
          cat ./frontend/.env.docker
      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.CACHE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CACHE_AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.CACHE_AWS_SESSION_TOKEN }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: |
            allypost/zet-live:latest
            allypost/zet-live:${{ github.sha }}
          cache-from: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true
          cache-to: type=s3,region=${{ vars.CACHE_AWS_REGION }},bucket=${{ vars.CACHE_AWS_BUCKET_NAME }},endpoint_url=${{ vars.CACHE_AWS_ENDPOINT_URL_S3 }},use_path_style=true,upload_parallelism=8,touch_refresh=1h,mode=max
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

  notify-watchtower:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Notify Watchtower
        run: |
          curl -sL -v \
            --header 'Authorization: Bearer ${{ secrets.WATCHTOWER_TOKEN }}' \
            "${{ vars.WATCHTOWER_URL }}/v1/update"
